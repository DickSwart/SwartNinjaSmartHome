---
# docker-compose pull
# docker-compose up -d  --remove-orphans
version: "3.7"
services:
  homeassistant:
    container_name: homeassistant
    image: homeassistant/home-assistant
    labels:
      - com.centurylinklabs.watchtower.enable=false
    environment:
      TZ: ${TZ}
    devices:
      - /dev/ttyACM0:/dev/ttyACM0
    volumes:
      - ~/docker/swart-ninja-smart-home/homeassistant/config:/config
      - ~/docker/swart-ninja-smart-home/homeassistant/.ssh:/root/.ssh
      - /var/run/docker.sock:/var/run/docker.sock
    restart: always
    network_mode: host
    depends_on:
      - mosquitto
      - influxdb
      - mariadb

  mariadb:
    container_name: mariadb
    image: bianjp/mariadb-alpine:latest
    restart: always
    ports:
      - 3306:3306/tcp
    volumes:
      - ~/docker/swart-ninja-smart-home/mariadb/config:/etc/mysql/conf.d
      - ~/docker/swart-ninja-smart-home/mariadb/data:/var/lib/mysql
    environment:
      TZ: ${TZ}
      MYSQL_ROOT_PASSWORD: ${MARIADB_MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: homeassistant
      MYSQL_USER: hass
      MYSQL_PASSWORD: ${MARIADB_MYSQL_HASS_PASSWORD}

  mosquitto:
    container_name: mosquitto
    image: eclipse-mosquitto
    volumes:
      - ~/docker/swart-ninja-smart-home/mosquitto/config:/mosquitto/config
      - ~/docker/swart-ninja-smart-home/mosquitto/data:/mosquitto/data
      - ~/docker/swart-ninja-smart-home/mosquitto/log:/mosquitto/log
    labels:
      - com.centurylinklabs.watchtower.enable=false
    restart: always
    ports:
      - 1883:1883
      - 9001:9001

  influxdb:
    container_name: influxdb
    image: influxdb
    restart: always
    ports:
      - 8083:8083
      - 8086:8086
      - 8090:8090
    volumes:
      - ~/docker/swart-ninja-smart-home/influxdb/data:/var/lib/influxdb
    environment:
      TZ: ${TZ}
      INFLUXDB_DB: home_assistant
      INFLUXDB_ADMIN_USER: admin
      INFLUXDB_ADMIN_PASSWORD: ${INFLUXDB_ADMIN_PASSWORD}
      INFLUXDB_WRITE_USER: hass
      INFLUXDB_WRITE_USER_PASSWORD: ${INFLUXDB_HASS_USER_PASSWORD}
      INFLUXDB_READ_USER: grafana
      INFLUXDB_READ_USER_PASSWORD: ${INFLUXDB_GRAFANA_USER_PASSWORD}
    command: -config /etc/influxdb/influxdb.conf

  chronograf:
    container_name: chronograf
    image: chronograf
    restart: always
    volumes:
      - chronograf_data:/var/lib/chronograf
    ports:
      - 10000:10000
      - 8888:8888
    links:
      - influxdb

  grafana:
    container_name: grafana
    image: grafana/grafana
    restart: always
    user: ${USER_ID}:${GROUP_ID}
    volumes:
      - ~/docker/swart-ninja-smart-home/grafana/data:/var/lib/grafana
      - ~/docker/swart-ninja-smart-home/grafana/log:/var/log/grafana
      - ~/docker/swart-ninja-smart-home/grafana/config/grafana.ini:/etc/grafana/grafana.ini
    ports:
      - 3000:3000
    links:
      - influxdb
    depends_on:
      - influxdb
    environment:
      GF_SMTP_ENABLED: "True"
      GF_SMTP_FROM_ADDRESS: ${EMAIL_FROM_ADDRESS}
      GF_SMTP_FROM_NAME: ${EMAIL_FROM_NAME}
      GF_SMTP_HOST: ${EMAIL_SMTP_HOST}
      GF_SMTP_USER: ${EMAIL_FROM_USER}
      GF_SMTP_PASSWORD: ${EMAIL_FROM_PASSWORD}
      TZ: ${TZ}

  deepstack:
    container_name: deepstack
    image: deepquestai/deepstack:latest
    restart: always
    volumes:
      - deepstack:/datastore
    ports:
      - 5000:5000
    environment:
      TZ: ${TZ}
      VISION-DETECTION: "True"

  nodered:
    container_name: nodered
    image: nodered/node-red
    restart: always
    user: ${USER_ID}:${GROUP_ID}
    volumes:
      - ~/docker/swart-ninja-smart-home/nodered:/data
    ports:
      - 1880:1880
    environment:
      TZ: ${TZ}

  esphome:
    container_name: esphome
    image: esphome/esphome
    restart: unless-stopped
    network_mode: host
    volumes:
      - ~/docker/swart-ninja-smart-home/esphome:/config:rw
    ports:
      - 6052:6052
      - 6123:6123
    environment:
      TZ: ${TZ}

  tasmoadmin:
    container_name: tasmoadmin
    image: raymondmm/tasmoadmin
    ports:
      - 9999:80
    volumes:
      - tasmoadmin_data:/data
    restart: unless-stopped
    environment:
      TZ: ${TZ}

volumes:
  deepstack:
  chronograf_data:
  tasmoadmin_data:
